name: Anura Data Model workflow

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'

concurrency: ${{ github.workflow }} # Do not permit concurrent builds for the same workflow

jobs:
  generate_model:
    name: Generate model
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write # Needed to commit updated version

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: pyproject.toml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.OIDC_ROLE_AWS_REGION }}

      - name: Configure pip to use CodeArtifact dependencies
        run: |
          aws codeartifact login --tool pip --domain revibe-energy --repository revibe-repo

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Install Python tests dependencies
        run: |
          pip install -r tests/requirements.txt

      - name: Install buf tooling
        uses: bufbuild/buf-setup-action@v1.26.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Python implementation for tests
        run: |
          buf generate
        working-directory: ${{ env.working-directory }}./tests

      - name: Run Pytest
        run: python3 -m pytest

      - name: Generate Python implementation
        run: |
          buf generate model

      - name: Bump the package version
        id: model_version
        run: |
          poetry version minor
          PACKAGE_VERSION=$(poetry version --short)
          echo "model_version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT

      - name: Package the generated files as a Python package
        run: |
          poetry build

      - name: Upload the package to CodeArtifact
        run: |
          export TWINE_USERNAME=aws
          export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain revibe-energy --query authorizationToken --output text`
          export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain revibe-energy --repository revibe-repo --format pypi --query repositoryEndpoint --output text`
          twine upload --repository revibe-repo ./dist/*

      - name: Commit updated project version
        run: |
          git config user.name github-actions
          git config user.email github-actions@revibeenergy.com
          git add pyproject.toml
          git commit pyproject.toml -m "Bump version to ${{steps.model_version.outputs.model_version}}"
          git pull --rebase && git push
