syntax = "proto3";

package model;

import "commons.proto";

message NodeHealthData {
  NodeOrigin origin = 1;
  optional uint32 battery_voltage_mv = 2;
  optional uint32 eh_voltage_mv = 3; // Voltage generated by the energy harvester
  optional sint32 signal_strength_dbm = 4;
  optional float temperature = 5; // Temperature in Celsius
  optional uint64 uptime_ms = 6;
  optional uint64 reboot_count = 7; // Number of times the node has been rebooted
  optional float clock_sync_skew = 8;
  optional uint64 clock_sync_age = 9;
  optional uint64 clock_sync_diff = 10;
  map <string, string> debug_info = 11;
}

message GatewayHealthData {
  GatewayOrigin origin = 1;
  optional sint32 temperature = 2; // Temperature in Celsius
  optional uint32 db_size_bytes = 3; // Size occupied for buffering of data in case of no connectivity
}
